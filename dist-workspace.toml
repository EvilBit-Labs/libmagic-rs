[workspace]
members = ["cargo:."]

# Config for 'dist'
[dist]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.30.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = []
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "aarch64-pc-windows-msvc", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = false
# Generate and dist a source tarball
source-tarball = true
# Whether to enable GitHub Attestations
github-attestations = true
# Which phase dist should use to create the GitHub release
github-release = "auto"
# Whether to display this app's installers/artifacts in release bodies
display = true
# Whether dist should create a Github Release or use an existing draft
create-release = true
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.xz"
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".zip"
# Whether +crt-static should be used on msvc
msvc-crt-static = true
# Whether to embed dependency information using cargo-auditable
cargo-auditable = true
# Whether to use cargo-cyclonedx to generate an SBOM
cargo-cyclonedx = true


# GitHub release configuration
[dist.github-action-commits]
"actions/checkout" = "v5"
"actions/download-artifact" = "v5"
"actions/attest-build-provenance" = "v3"
"actions/upload-artifact" = "v4"
